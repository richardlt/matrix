// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/types.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common/types.proto

It has these top-level messages:
	Color
	Layer
	Coord
	Frame
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command int32

const (
	Command_UP_UP       Command = 0
	Command_UP_DOWN     Command = 1
	Command_RIGHT_UP    Command = 2
	Command_RIGHT_DOWN  Command = 3
	Command_LEFT_UP     Command = 4
	Command_LEFT_DOWN   Command = 5
	Command_DOWN_UP     Command = 6
	Command_DOWN_DOWN   Command = 7
	Command_A_UP        Command = 8
	Command_A_DOWN      Command = 9
	Command_B_UP        Command = 10
	Command_B_DOWN      Command = 11
	Command_X_UP        Command = 12
	Command_X_DOWN      Command = 13
	Command_Y_UP        Command = 14
	Command_Y_DOWN      Command = 15
	Command_START_UP    Command = 16
	Command_START_DOWN  Command = 17
	Command_SELECT_UP   Command = 18
	Command_SELECT_DOWN Command = 19
	Command_L_UP        Command = 20
	Command_L_DOWN      Command = 21
	Command_R_UP        Command = 22
	Command_R_DOWN      Command = 23
)

var Command_name = map[int32]string{
	0:  "UP_UP",
	1:  "UP_DOWN",
	2:  "RIGHT_UP",
	3:  "RIGHT_DOWN",
	4:  "LEFT_UP",
	5:  "LEFT_DOWN",
	6:  "DOWN_UP",
	7:  "DOWN_DOWN",
	8:  "A_UP",
	9:  "A_DOWN",
	10: "B_UP",
	11: "B_DOWN",
	12: "X_UP",
	13: "X_DOWN",
	14: "Y_UP",
	15: "Y_DOWN",
	16: "START_UP",
	17: "START_DOWN",
	18: "SELECT_UP",
	19: "SELECT_DOWN",
	20: "L_UP",
	21: "L_DOWN",
	22: "R_UP",
	23: "R_DOWN",
}
var Command_value = map[string]int32{
	"UP_UP":       0,
	"UP_DOWN":     1,
	"RIGHT_UP":    2,
	"RIGHT_DOWN":  3,
	"LEFT_UP":     4,
	"LEFT_DOWN":   5,
	"DOWN_UP":     6,
	"DOWN_DOWN":   7,
	"A_UP":        8,
	"A_DOWN":      9,
	"B_UP":        10,
	"B_DOWN":      11,
	"X_UP":        12,
	"X_DOWN":      13,
	"Y_UP":        14,
	"Y_DOWN":      15,
	"START_UP":    16,
	"START_DOWN":  17,
	"SELECT_UP":   18,
	"SELECT_DOWN": 19,
	"L_UP":        20,
	"L_DOWN":      21,
	"R_UP":        22,
	"R_DOWN":      23,
}

func (x Command) String() string {
	return proto.EnumName(Command_name, int32(x))
}
func (Command) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Color struct {
	R uint64 `protobuf:"varint,1,opt,name=r" json:"r,omitempty"`
	G uint64 `protobuf:"varint,2,opt,name=g" json:"g,omitempty"`
	B uint64 `protobuf:"varint,3,opt,name=b" json:"b,omitempty"`
	A uint64 `protobuf:"varint,4,opt,name=a" json:"a,omitempty"`
}

func (m *Color) Reset()                    { *m = Color{} }
func (m *Color) String() string            { return proto.CompactTextString(m) }
func (*Color) ProtoMessage()               {}
func (*Color) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Color) GetR() uint64 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *Color) GetG() uint64 {
	if m != nil {
		return m.G
	}
	return 0
}

func (m *Color) GetB() uint64 {
	if m != nil {
		return m.B
	}
	return 0
}

func (m *Color) GetA() uint64 {
	if m != nil {
		return m.A
	}
	return 0
}

type Layer struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *Layer) Reset()                    { *m = Layer{} }
func (m *Layer) String() string            { return proto.CompactTextString(m) }
func (*Layer) ProtoMessage()               {}
func (*Layer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Layer) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type Coord struct {
	X int64 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y int64 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *Coord) Reset()                    { *m = Coord{} }
func (m *Coord) String() string            { return proto.CompactTextString(m) }
func (*Coord) ProtoMessage()               {}
func (*Coord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Coord) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Coord) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Frame struct {
	Pixels []*Color `protobuf:"bytes,1,rep,name=pixels" json:"pixels,omitempty"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Frame) GetPixels() []*Color {
	if m != nil {
		return m.Pixels
	}
	return nil
}

func init() {
	proto.RegisterType((*Color)(nil), "common.Color")
	proto.RegisterType((*Layer)(nil), "common.Layer")
	proto.RegisterType((*Coord)(nil), "common.Coord")
	proto.RegisterType((*Frame)(nil), "common.Frame")
	proto.RegisterEnum("common.Command", Command_name, Command_value)
}

func init() { proto.RegisterFile("common/types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x91, 0xdb, 0x6a, 0xf2, 0x40,
	0x14, 0x46, 0xff, 0x31, 0x07, 0xcd, 0x8e, 0xa7, 0x7f, 0x7a, 0x0a, 0xf4, 0x46, 0x52, 0x0a, 0xd2,
	0x8b, 0x14, 0xda, 0x07, 0x28, 0x6a, 0xb5, 0x2d, 0x84, 0x56, 0x46, 0xa5, 0x7a, 0x25, 0xb1, 0x06,
	0x11, 0x8c, 0x23, 0x51, 0xc1, 0x3c, 0x5a, 0xdf, 0xae, 0x7c, 0x7b, 0xbc, 0x9b, 0xb5, 0x96, 0x6e,
	0x3e, 0x08, 0xc9, 0x1f, 0x9d, 0x65, 0x7a, 0xfb, 0x78, 0x28, 0x76, 0xe9, 0x3e, 0xda, 0xe5, 0xfa,
	0xa0, 0xa5, 0x6b, 0x5c, 0xf8, 0x42, 0x4e, 0x4f, 0x6f, 0x74, 0x2e, 0xab, 0x24, 0xf2, 0x40, 0xb4,
	0x44, 0xdb, 0x56, 0x82, 0x69, 0x15, 0x94, 0x0c, 0xad, 0x40, 0x8b, 0xc0, 0x32, 0xb4, 0x00, 0x25,
	0x81, 0x6d, 0x28, 0x09, 0x6f, 0xc9, 0x89, 0x93, 0x22, 0xcd, 0xa5, 0x24, 0xfb, 0x78, 0x5c, 0x2f,
	0xf9, 0x86, 0xa7, 0xf8, 0x1d, 0xde, 0xe1, 0xba, 0xce, 0x97, 0xf8, 0xcf, 0x89, 0x8b, 0xa5, 0xc4,
	0x09, 0x54, 0xf0, 0x75, 0x4b, 0x89, 0x22, 0x8c, 0xc8, 0x19, 0xe4, 0x49, 0x96, 0xca, 0x7b, 0x72,
	0x77, 0xeb, 0x53, 0xba, 0xd9, 0x07, 0xa2, 0x65, 0xb5, 0xfd, 0xa7, 0x5a, 0x64, 0x46, 0x46, 0xbc,
	0x50, 0x9d, 0xe3, 0xc3, 0x6f, 0x89, 0xca, 0x3d, 0x9d, 0x65, 0xc9, 0x76, 0x29, 0x3d, 0x72, 0x26,
	0xc3, 0xf9, 0x64, 0xd8, 0xfc, 0x27, 0x7d, 0x2a, 0x4f, 0x86, 0xf3, 0xd7, 0xaf, 0xef, 0xcf, 0xa6,
	0x90, 0x55, 0xaa, 0xa8, 0x8f, 0xb7, 0xf7, 0x31, 0x52, 0x49, 0xd6, 0x89, 0x0c, 0x71, 0xb5, 0xf0,
	0xd3, 0xb8, 0x3f, 0xe0, 0x68, 0xcb, 0x1a, 0x79, 0x0c, 0xdc, 0x1c, 0x34, 0xbc, 0xd0, 0x5c, 0x34,
	0x06, 0x6e, 0x65, 0x59, 0x21, 0xbb, 0x83, 0x50, 0x91, 0x44, 0x6e, 0xc7, 0x58, 0x0f, 0xb6, 0x0b,
	0x4b, 0xb0, 0x5d, 0x63, 0x7d, 0xd8, 0x29, 0x6c, 0x15, 0x76, 0x6a, 0x6c, 0x0d, 0x76, 0x06, 0x5b,
	0x87, 0x9d, 0x19, 0xdb, 0xc0, 0xda, 0xd1, 0xb8, 0xa3, 0x78, 0x50, 0x13, 0x6b, 0x0d, 0x71, 0xfd,
	0x8f, 0x11, 0xa3, 0x7e, 0xdc, 0xef, 0x71, 0x96, 0xb2, 0x41, 0xfe, 0x19, 0xb9, 0x5f, 0xe0, 0x66,
	0x8c, 0x74, 0x89, 0x9b, 0xb1, 0xb1, 0x57, 0xb0, 0x0a, 0xf6, 0x1a, 0x56, 0x19, 0x7b, 0xb3, 0x70,
	0xf9, 0xeb, 0x3f, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x16, 0x34, 0xf0, 0x13, 0x02, 0x00,
	0x00,
}
